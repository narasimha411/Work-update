       _/m/'
[ec2-user@ip-172-31-47-61 ~]$ sudo -i
[root@ip-172-31-47-61 ~]# apt update && apt install apache -y
-bash: apt: command not found
[root@ip-172-31-47-61 ~]# apt update && apt install apache2 -y
-bash: apt: command not found
[root@ip-172-31-47-61 ~]# systemctl status apache2
Unit apache2.service could not be found.
[root@ip-172-31-47-61 ~]# sudo apt install apache2
sudo: apt: command not found
[root@ip-172-31-47-61 ~]# yum install httpd
Amazon Linux 2023 Kernel Livepatch repository                                                            177 kB/s |  19 kB     00:00
Last metadata expiration check: 0:00:01 ago on Wed Aug 13 10:32:49 2025.
Dependencies resolved.
=========================================================================================================================================
 Package                              Architecture            Version                                 Repository                    Size
=========================================================================================================================================
Installing:
 httpd                                x86_64                  2.4.64-1.amzn2023.0.1                   amazonlinux                   47 k
Installing dependencies:
 apr                                  x86_64                  1.7.5-1.amzn2023.0.4                    amazonlinux                  129 k
 apr-util                             x86_64                  1.6.3-1.amzn2023.0.1                    amazonlinux                   98 k
 generic-logos-httpd                  noarch                  18.0.0-12.amzn2023.0.3                  amazonlinux                   19 k
 httpd-core                           x86_64                  2.4.64-1.amzn2023.0.1                   amazonlinux                  1.4 M
 httpd-filesystem                     noarch                  2.4.64-1.amzn2023.0.1                   amazonlinux                   13 k
 httpd-tools                          x86_64                  2.4.64-1.amzn2023.0.1                   amazonlinux                   81 k
 libbrotli                            x86_64                  1.0.9-4.amzn2023.0.2                    amazonlinux                  315 k
 mailcap                              noarch                  2.1.49-3.amzn2023.0.3                   amazonlinux                   33 k
Installing weak dependencies:
 apr-util-openssl                     x86_64                  1.6.3-1.amzn2023.0.1                    amazonlinux                   17 k
 mod_http2                            x86_64                  2.0.27-1.amzn2023.0.3                   amazonlinux                  166 k
 mod_lua                              x86_64                  2.4.64-1.amzn2023.0.1                   amazonlinux                   60 k

Transaction Summary
=========================================================================================================================================
Install  12 Packages

Total download size: 2.3 M
Installed size: 6.9 M
Is this ok [y/N]: y
Downloading Packages:
(1/12): apr-util-1.6.3-1.amzn2023.0.1.x86_64.rpm                                                         2.6 MB/s |  98 kB     00:00
(2/12): apr-util-openssl-1.6.3-1.amzn2023.0.1.x86_64.rpm                                                 418 kB/s |  17 kB     00:00
(3/12): apr-1.7.5-1.amzn2023.0.4.x86_64.rpm                                                              2.7 MB/s | 129 kB     00:00
(4/12): generic-logos-httpd-18.0.0-12.amzn2023.0.3.noarch.rpm                                            942 kB/s |  19 kB     00:00
(5/12): httpd-2.4.64-1.amzn2023.0.1.x86_64.rpm                                                           2.2 MB/s |  47 kB     00:00
(6/12): httpd-core-2.4.64-1.amzn2023.0.1.x86_64.rpm                                                       35 MB/s | 1.4 MB     00:00
(7/12): httpd-filesystem-2.4.64-1.amzn2023.0.1.noarch.rpm                                                424 kB/s |  13 kB     00:00
(8/12): httpd-tools-2.4.64-1.amzn2023.0.1.x86_64.rpm                                                     2.5 MB/s |  81 kB     00:00
(9/12): mailcap-2.1.49-3.amzn2023.0.3.noarch.rpm                                                         1.4 MB/s |  33 kB     00:00
(10/12): libbrotli-1.0.9-4.amzn2023.0.2.x86_64.rpm                                                       8.9 MB/s | 315 kB     00:00
(11/12): mod_http2-2.0.27-1.amzn2023.0.3.x86_64.rpm                                                      5.0 MB/s | 166 kB     00:00
(12/12): mod_lua-2.4.64-1.amzn2023.0.1.x86_64.rpm                                                        2.6 MB/s |  60 kB     00:00
-----------------------------------------------------------------------------------------------------------------------------------------
Total                                                                                                     14 MB/s | 2.3 MB     00:00
Running transaction check
Transaction check succeeded.
Running transaction test
Transaction test succeeded.
Running transaction
  Preparing        :                                                                                                                 1/1
  Installing       : apr-1.7.5-1.amzn2023.0.4.x86_64                                                                                1/12
  Installing       : apr-util-openssl-1.6.3-1.amzn2023.0.1.x86_64                                                                   2/12
  Installing       : apr-util-1.6.3-1.amzn2023.0.1.x86_64                                                                           3/12
  Installing       : mailcap-2.1.49-3.amzn2023.0.3.noarch                                                                           4/12
  Installing       : httpd-tools-2.4.64-1.amzn2023.0.1.x86_64                                                                       5/12
  Installing       : libbrotli-1.0.9-4.amzn2023.0.2.x86_64                                                                          6/12
  Running scriptlet: httpd-filesystem-2.4.64-1.amzn2023.0.1.noarch                                                                  7/12
  Installing       : httpd-filesystem-2.4.64-1.amzn2023.0.1.noarch                                                                  7/12
  Installing       : httpd-core-2.4.64-1.amzn2023.0.1.x86_64                                                                        8/12
  Installing       : mod_http2-2.0.27-1.amzn2023.0.3.x86_64                                                                         9/12
  Installing       : mod_lua-2.4.64-1.amzn2023.0.1.x86_64                                                                          10/12
  Installing       : generic-logos-httpd-18.0.0-12.amzn2023.0.3.noarch                                                             11/12
  Installing       : httpd-2.4.64-1.amzn2023.0.1.x86_64                                                                            12/12
  Running scriptlet: httpd-2.4.64-1.amzn2023.0.1.x86_64                                                                            12/12
  Verifying        : apr-1.7.5-1.amzn2023.0.4.x86_64                                                                                1/12
  Verifying        : apr-util-1.6.3-1.amzn2023.0.1.x86_64                                                                           2/12
  Verifying        : apr-util-openssl-1.6.3-1.amzn2023.0.1.x86_64                                                                   3/12
  Verifying        : generic-logos-httpd-18.0.0-12.amzn2023.0.3.noarch                                                              4/12
  Verifying        : httpd-2.4.64-1.amzn2023.0.1.x86_64                                                                             5/12
  Verifying        : httpd-core-2.4.64-1.amzn2023.0.1.x86_64                                                                        6/12
  Verifying        : httpd-filesystem-2.4.64-1.amzn2023.0.1.noarch                                                                  7/12
  Verifying        : httpd-tools-2.4.64-1.amzn2023.0.1.x86_64                                                                       8/12
  Verifying        : libbrotli-1.0.9-4.amzn2023.0.2.x86_64                                                                          9/12
  Verifying        : mailcap-2.1.49-3.amzn2023.0.3.noarch                                                                          10/12
  Verifying        : mod_http2-2.0.27-1.amzn2023.0.3.x86_64                                                                        11/12
  Verifying        : mod_lua-2.4.64-1.amzn2023.0.1.x86_64                                                                          12/12

Installed:
  apr-1.7.5-1.amzn2023.0.4.x86_64                                   apr-util-1.6.3-1.amzn2023.0.1.x86_64
  apr-util-openssl-1.6.3-1.amzn2023.0.1.x86_64                      generic-logos-httpd-18.0.0-12.amzn2023.0.3.noarch
  httpd-2.4.64-1.amzn2023.0.1.x86_64                                httpd-core-2.4.64-1.amzn2023.0.1.x86_64
  httpd-filesystem-2.4.64-1.amzn2023.0.1.noarch                     httpd-tools-2.4.64-1.amzn2023.0.1.x86_64
  libbrotli-1.0.9-4.amzn2023.0.2.x86_64                             mailcap-2.1.49-3.amzn2023.0.3.noarch
  mod_http2-2.0.27-1.amzn2023.0.3.x86_64                            mod_lua-2.4.64-1.amzn2023.0.1.x86_64

Complete!
[root@ip-172-31-47-61 ~]# service http status
Redirecting to /bin/systemctl status http.service
Unit http.service could not be found.
[root@ip-172-31-47-61 ~]# service httpd status
Redirecting to /bin/systemctl status httpd.service
○ httpd.service - The Apache HTTP Server
     Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; preset: disabled)
     Active: inactive (dead)
       Docs: man:httpd.service(8)
[root@ip-172-31-47-61 ~]# service httpd start
Redirecting to /bin/systemctl start httpd.service
[root@ip-172-31-47-61 ~]# service httpd status
Redirecting to /bin/systemctl status httpd.service
● httpd.service - The Apache HTTP Server
     Loaded: loaded (/usr/lib/systemd/system/httpd.service; disabled; preset: disabled)
     Active: active (running) since Wed 2025-08-13 10:35:59 UTC; 38s ago
       Docs: man:httpd.service(8)
   Main PID: 33465 (httpd)
     Status: "Total requests: 0; Idle/Busy workers 100/0;Requests/sec: 0; Bytes served/sec:   0 B/sec"
      Tasks: 177 (limit: 1111)
     Memory: 13.0M
        CPU: 81ms
     CGroup: /system.slice/httpd.service
             ├─33465 /usr/sbin/httpd -DFOREGROUND
             ├─33485 /usr/sbin/httpd -DFOREGROUND
             ├─33486 /usr/sbin/httpd -DFOREGROUND
             ├─33487 /usr/sbin/httpd -DFOREGROUND
             └─33488 /usr/sbin/httpd -DFOREGROUND

Aug 13 10:35:59 ip-172-31-47-61.ap-south-1.compute.internal systemd[1]: Starting httpd.service - The Apache HTTP Server...
Aug 13 10:35:59 ip-172-31-47-61.ap-south-1.compute.internal systemd[1]: Started httpd.service - The Apache HTTP Server.
Aug 13 10:35:59 ip-172-31-47-61.ap-south-1.compute.internal httpd[33465]: Server configured, listening on: port 80
[root@ip-172-31-47-61 ~]# chkconfig httpd on
Note: Forwarding request to 'systemctl enable httpd.service'.
Created symlink /etc/systemd/system/multi-user.target.wants/httpd.service → /usr/lib/systemd/system/httpd.service.
[root@ip-172-31-47-61 ~]# apt update && apt install apache2 -y
-bash: apt: command not found
[root@ip-172-31-47-61 ~]# systemctl status apache2
Unit apache2.service could not be found.
[root@ip-172-31-47-61 ~]# cd /etc/httpd/
[root@ip-172-31-47-61 httpd]# ls
conf  conf.d  conf.modules.d  logs  modules  run  state
[root@ip-172-31-47-61 httpd]# cd conf
[root@ip-172-31-47-61 conf]# ls
httpd.conf  magic
[root@ip-172-31-47-61 conf]# cat httpd.conf
#
# This is the main Apache HTTP server configuration file.  It contains the
# configuration directives that give the server its instructions.
# See <URL:http://httpd.apache.org/docs/2.4/> for detailed information.
# In particular, see
# <URL:http://httpd.apache.org/docs/2.4/mod/directives.html>
# for a discussion of each configuration directive.
#
# See the httpd.conf(5) man page for more information on this configuration,
# and httpd.service(8) on using and configuring the httpd service.
#
# Do NOT simply read the instructions in here without understanding
# what they do.  They're here only as hints or reminders.  If you are unsure
# consult the online docs. You have been warned.
#
# Configuration and logfile names: If the filenames you specify for many
# of the server's control files begin with "/" (or "drive:/" for Win32), the
# server will use that explicit path.  If the filenames do *not* begin
# with "/", the value of ServerRoot is prepended -- so 'log/access_log'
# with ServerRoot set to '/www' will be interpreted by the
# server as '/www/log/access_log', where as '/log/access_log' will be
# interpreted as '/log/access_log'.

#
# ServerRoot: The top of the directory tree under which the server's
# configuration, error, and log files are kept.
#
# Do not add a slash at the end of the directory path.  If you point
# ServerRoot at a non-local disk, be sure to specify a local disk on the
# Mutex directive, if file-based mutexes are used.  If you wish to share the
# same ServerRoot for multiple httpd daemons, you will need to change at
# least PidFile.
#
ServerRoot "/etc/httpd"

#
# Listen: Allows you to bind Apache to specific IP addresses and/or
# ports, instead of the default. See also the <VirtualHost>
# directive.
#
# Change this to Listen on a specific IP address, but note that if
# httpd.service is enabled to run at boot time, the address may not be
# available when the service starts.  See the httpd.service(8) man
# page for more information.
#
#Listen 12.34.56.78:80
Listen 80

#
# Dynamic Shared Object (DSO) Support
#
# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Statically compiled modules (those listed by `httpd -l') do not need
# to be loaded here.
#
# Example:
# LoadModule foo_module modules/mod_foo.so
#
Include conf.modules.d/*.conf

#
# If you wish httpd to run as a different user or group, you must run
# httpd as root initially and it will switch.
#
# User/Group: The name (or #number) of the user/group to run httpd as.
# It is usually good practice to create a dedicated user and group for
# running httpd, as with most system services.
#
User apache
Group apache

# 'Main' server configuration
#
# The directives in this section set up the values used by the 'main'
# server, which responds to any requests that aren't handled by a
# <VirtualHost> definition.  These values also provide defaults for
# any <VirtualHost> containers you may define later in the file.
#
# All of these directives may appear inside <VirtualHost> containers,
# in which case these default settings will be overridden for the
# virtual host being defined.
#

#
# ServerAdmin: Your address, where problems with the server should be
# e-mailed.  This address appears on some server-generated pages, such
# as error documents.  e.g. admin@your-domain.com
#
ServerAdmin root@localhost

#
# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.
#
# If your host doesn't have a registered DNS name, enter its IP address here.
#
#ServerName www.example.com:80

#
# Deny access to the entirety of your server's filesystem. You must
# explicitly permit access to web content directories in other
# <Directory> blocks below.
#
<Directory />
    AllowOverride none
    Require all denied
</Directory>

#
# Note that from this point forward you must specifically allow
# particular features to be enabled - so if something's not working as
# you might expect, make sure that you have specifically enabled it
# below.
#

#
# DocumentRoot: The directory out of which you will serve your
# documents. By default, all requests are taken from this directory, but
# symbolic links and aliases may be used to point to other locations.
#
DocumentRoot "/var/www/html"

#
# Relax access to content within /var/www.
#
<Directory "/var/www">
    AllowOverride None
    # Allow open access:
    Require all granted
</Directory>

# Further relax access to the default document root:
<Directory "/var/www/html">
    #
    # Possible values for the Options directive are "None", "All",
    # or any combination of:
    #   Indexes Includes FollowSymLinks SymLinksifOwnerMatch ExecCGI MultiViews
    #
    # Note that "MultiViews" must be named *explicitly* --- "Options All"
    # doesn't give it to you.
    #
    # The Options directive is both complicated and important.  Please see
    # http://httpd.apache.org/docs/2.4/mod/core.html#options
    # for more information.
    #
    Options Indexes FollowSymLinks

    #
    # AllowOverride controls what directives may be placed in .htaccess files.
    # It can be "All", "None", or any combination of the keywords:
    #   AllowOverride FileInfo AuthConfig Limit
    #
    AllowOverride None

    #
    # Controls who can get stuff from this server.
    #
    Require all granted
</Directory>

#
# DirectoryIndex: sets the file that Apache will serve if a directory
# is requested.
#
<IfModule dir_module>
    DirectoryIndex index.html
</IfModule>

#
# The following lines prevent .htaccess and .htpasswd files from being
# viewed by Web clients.
#
<Files ".ht*">
    Require all denied
</Files>

#
# ErrorLog: The location of the error log file.
# If you do not specify an ErrorLog directive within a <VirtualHost>
# container, error messages relating to that virtual host will be
# logged here.  If you *do* define an error logfile for a <VirtualHost>
# container, that host's errors will be logged there and not here.
#
ErrorLog "logs/error_log"

#
# LogLevel: Control the number of messages logged to the error_log.
# Possible values include: debug, info, notice, warn, error, crit,
# alert, emerg.
#
LogLevel warn

<IfModule log_config_module>
    #
    # The following directives define some format nicknames for use with
    # a CustomLog directive (see below).
    #
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
    LogFormat "%h %l %u %t \"%r\" %>s %b" common

    <IfModule logio_module>
      # You need to enable mod_logio.c to use %I and %O
      LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
    </IfModule>

    #
    # The location and format of the access logfile (Common Logfile Format).
    # If you do not define any access logfiles within a <VirtualHost>
    # container, they will be logged here.  Contrariwise, if you *do*
    # define per-<VirtualHost> access logfiles, transactions will be
    # logged therein and *not* in this file.
    #
    #CustomLog "logs/access_log" common

    #
    # If you prefer a logfile with access, agent, and referer information
    # (Combined Logfile Format) you can use the following directive.
    #
    CustomLog "logs/access_log" combined
</IfModule>

<IfModule alias_module>
    #
    # Redirect: Allows you to tell clients about documents that used to
    # exist in your server's namespace, but do not anymore. The client
    # will make a new request for the document at its new location.
    # Example:
    # Redirect permanent /foo http://www.example.com/bar

    #
    # Alias: Maps web paths into filesystem paths and is used to
    # access content that does not live under the DocumentRoot.
    # Example:
    # Alias /webpath /full/filesystem/path
    #
    # If you include a trailing / on /webpath then the server will
    # require it to be present in the URL.  You will also likely
    # need to provide a <Directory> section to allow access to
    # the filesystem path.

    #
    # ScriptAlias: This controls which directories contain server scripts.
    # ScriptAliases are essentially the same as Aliases, except that
    # documents in the target directory are treated as applications and
    # run by the server when requested rather than as documents sent to the
    # client.  The same rules about trailing "/" apply to ScriptAlias
    # directives as to Alias.
    #
    ScriptAlias /cgi-bin/ "/var/www/cgi-bin/"

</IfModule>

#
# "/var/www/cgi-bin" should be changed to whatever your ScriptAliased
# CGI directory exists, if you have that configured.
#
<Directory "/var/www/cgi-bin">
    AllowOverride None
    Options None
    Require all granted
</Directory>

<IfModule headers_module>
    #
    # Avoid passing HTTP_PROXY environment to CGI's on this or any proxied
    # backend servers which have lingering "httpoxy" defects.
    # 'Proxy' request header is undefined by the IETF, not listed by IANA
    #
    RequestHeader unset Proxy early
</IfModule>

<IfModule mime_module>
    #
    # TypesConfig points to the file containing the list of mappings from
    # filename extension to MIME-type.
    #
    TypesConfig /etc/mime.types

    #
    # AddType allows you to add to or override the MIME configuration
    # file specified in TypesConfig for specific file types.
    #
    #AddType application/x-gzip .tgz
    #
    # AddEncoding allows you to have certain browsers uncompress
    # information on the fly. Note: Not all browsers support this.
    #
    #AddEncoding x-compress .Z
    #AddEncoding x-gzip .gz .tgz
    #
    # If the AddEncoding directives above are commented-out, then you
    # probably should define those extensions to indicate media types:
    #
    AddType application/x-compress .Z
    AddType application/x-gzip .gz .tgz

    #
    # AddHandler allows you to map certain file extensions to "handlers":
    # actions unrelated to filetype. These can be either built into the server
    # or added with the Action directive (see below)
    #
    # To use CGI scripts outside of ScriptAliased directories:
    # (You will also need to add "ExecCGI" to the "Options" directive.)
    #
    #AddHandler cgi-script .cgi

    # For type maps (negotiated resources):
    #AddHandler type-map var

    #
    # Filters allow you to process content before it is sent to the client.
    #
    # To parse .shtml files for server-side includes (SSI):
    # (You will also need to add "Includes" to the "Options" directive.)
    #
    AddType text/html .shtml
    AddOutputFilter INCLUDES .shtml
</IfModule>

#
# Specify a default charset for all content served; this enables
# interpretation of all content as UTF-8 by default.  To use the
# default browser choice (ISO-8859-1), or to allow the META tags
# in HTML content to override this choice, comment out this
# directive:
#
AddDefaultCharset UTF-8

<IfModule mime_magic_module>
    #
    # The mod_mime_magic module allows the server to use various hints from the
    # contents of the file itself to determine its type.  The MIMEMagicFile
    # directive tells the module where the hint definitions are located.
    #
    MIMEMagicFile conf/magic
</IfModule>

#
# Customizable error responses come in three flavors:
# 1) plain text 2) local redirects 3) external redirects
#
# Some examples:
#ErrorDocument 500 "The server made a boo boo."
#ErrorDocument 404 /missing.html
#ErrorDocument 404 "/cgi-bin/missing_handler.pl"
#ErrorDocument 402 http://www.example.com/subscription_info.html
#

#
# MaxRanges: Maximum number of Ranges in a request before
# returning the entire resource, or one of the special
# values 'default', 'none' or 'unlimited'.
# Default setting is to accept 200 Ranges.
#MaxRanges unlimited

#
# EnableMMAP and EnableSendfile: On systems that support it,
# memory-mapping or the sendfile syscall may be used to deliver
# files.  This usually improves server performance, but must
# be turned off when serving from networked-mounted
# filesystems or if support for these functions is otherwise
# broken on your system.
# Defaults if commented: EnableMMAP On, EnableSendfile Off
#
#EnableMMAP off
EnableSendfile on

# Supplemental configuration
#
# Load config files in the "/etc/httpd/conf.d" directory, if any.
IncludeOptional conf.d/*.conf
[root@ip-172-31-47-61 conf]# pwd
/etc/httpd/conf
[root@ip-172-31-47-61 conf]# ls
httpd.conf  magic
[root@ip-172-31-47-61 conf]# cd
[root@ip-172-31-47-61 ~]# cd
[root@ip-172-31-47-61 ~]# apt update && apt install apache -y
-bash: apt: command not found
[root@ip-172-31-47-61 ~]# systemctl status apache
Unit apache.service could not be found.
[root@ip-172-31-47-61 ~]# sudo apt-get update
sudo: apt-get: command not found
[root@ip-172-31-47-61 ~]# sudo apt -get install apache2
sudo: apt: command not found
[root@ip-172-31-47-61 ~]# sudo apt update
sudo: apt: command not found
[root@ip-172-31-47-61 ~]# cd ../
[root@ip-172-31-47-61 /]# sudo apt update
sudo: apt: command not found
[root@ip-172-31-47-61 /]# cd
[root@ip-172-31-47-61 ~]# sudo apt install apache2
sudo: apt: command not found
[root@ip-172-31-47-61 ~]# sudo apt-get upgrade -y
sudo: apt-get: command not found
[root@ip-172-31-47-61 ~]# sudo apt -get upgrade -y
sudo: apt: command not found
[root@ip-172-31-47-61 ~]# sudo apt-get update
sudo: apt-get: command not found
[root@ip-172-31-47-61 ~]# wget C:\Users\Sabik\Downloads\2133_moso_interior.zip
--2025-08-13 11:24:25--  ftp://c/UsersSabikDownloads2133_moso_interior.zip
           => ‘UsersSabikDownloads2133_moso_interior.zip’
Resolving c (c)... failed: Name or service not known.
wget: unable to resolve host address ‘c’
[root@ip-172-31-47-61 ~]# wget C:\Users\Sabik\Downloads\2133_moso_interior.zip\2133_moso_interior
--2025-08-13 11:26:01--  ftp://c/UsersSabikDownloads2133_moso_interior.zip2133_moso_interior
           => ‘UsersSabikDownloads2133_moso_interior.zip2133_moso_interior’
Resolving c (c)... failed: Name or service not known.
wget: unable to resolve host address ‘c’
[root@ip-172-31-47-61 ~]# wget https://ms-cookie-sync.presage.io/user-sync.html?gdpr=&gdpr_consent=&us_privacy=&redirect=https%3A%2F%2Fib.adnxs.com%2Fprebid%2Fsetuid%3Fbidder%3Dogury%26gdpr%3D%26gdpr_consent%3D%26gpp%3D%26gpp_sid%3D%26f%3Db%26uid%3D%7B%7BOGURY_UID%7D%7D&gpp=&gpp_sid=&source=prebids2s
[1] 55264
[2] 55265
[3] 55266
[4] 55267
[5] 55268
[6] 55269
[root@ip-172-31-47-61 ~]#
Redirecting output to ‘wget-log’.

[1]   Done                    wget https://ms-cookie-sync.presage.io/user-sync.html?gdpr=
[2]   Done                    gdpr_consent=
[3]   Done                    us_privacy=
[4]   Done                    redirect=https%3A%2F%2Fib.adnxs.com%2Fprebid%2Fsetuid%3Fbidder%3Dogury%26gdpr%3D%26gdpr_consent%3D%26gpp%3D%26gpp_sid%3D%26f%3Db%26uid%3D%7B%7BOGURY_UID%7D%7D
[5]-  Done                    gpp=
[6]+  Done                    gpp_sid=
[root@ip-172-31-47-61 ~]# ls
'user-sync.html?gdpr='   wget-log
[root@ip-172-31-47-61 ~]# wget C:\Users\Sabik\Downloads\2133_moso_interior.zip\2133_moso_interior\css
--2025-08-13 11:32:04--  ftp://c/UsersSabikDownloads2133_moso_interior.zip2133_moso_interiorcss
           => ‘UsersSabikDownloads2133_moso_interior.zip2133_moso_interiorcss’
Resolving c (c)... failed: Name or service not known.
wget: unable to resolve host address ‘c’
[root@ip-172-31-47-61 ~]# wget \Users\Sabik\Downloads\2133_moso_interior.zip\2133_moso_interior
--2025-08-13 11:35:40--  http://userssabikdownloads2133_moso_interior.zip2133_moso_interior/
Resolving userssabikdownloads2133_moso_interior.zip2133_moso_interior (userssabikdownloads2133_moso_interior.zip2133_moso_interior)... failed: Name or service not known.
wget: unable to resolve host address ‘userssabikdownloads2133_moso_interior.zip2133_moso_interior’
[root@ip-172-31-47-61 ~]# pwd
/root
[root@ip-172-31-47-61 ~]# ls
'user-sync.html?gdpr='   wget-log
[root@ip-172-31-47-61 ~]# wget https://ssp-sync.criteo.com/user-sync/match?p=J6KbbF90YjZMUzBuRk1yRjYlMkZPJTJCTjJ4Zjl4M3E2QXQ4dHRDQnVZcWx0QVVub3dwayUzRA&u=${USER_ID}
[1] 63800
[root@ip-172-31-47-61 ~]#
Redirecting output to ‘wget-log.1’.

[1]+  Done                    wget https://ssp-sync.criteo.com/user-sync/match?p=J6KbbF90YjZMUzBuRk1yRjYlMkZPJTJCTjJ4Zjl4M3E2QXQ4dHRDQnVZcWx0QVVub3dwayUzRA
[root@ip-172-31-47-61 ~]# cp -r wget-log/* var/www/html/
cp: cannot stat 'wget-log/*': Not a directory
[root@ip-172-31-47-61 ~]# ^C
[root@ip-172-31-47-61 ~]# cp -r user-sync.html?gdpr='   wget-log/* var/www/html/
>
>
>
> ^C
[root@ip-172-31-47-61 ~]# history
    1  apt update && apt install apache -y
    2  apt update && apt install apache2 -y
    3  systemctl status apache2
    4  sudo apt install apache2
    5  yum install httpd
    6  service http status
    7  service httpd status
    8  service httpd start
    9  service httpd status
   10  chkconfig httpd on
   11  apt update && apt install apache2 -y
   12  systemctl status apache2
   13  cd /etc/httpd/
   14  ls
   15  cd conf
   16  ls
   17  cat httpd.conf
   18  pwd
   19  ls
   20  cd
   21  apt update && apt install apache -y
   22  systemctl status apache
   23  sudo apt-get update
   24  sudo apt -get install apache2
   25  sudo apt update
   26  cd ../
   27  sudo apt update
   28  cd
   29  sudo apt install apache2
   30  sudo apt-get upgrade -y
   31  sudo apt -get upgrade -y
   32  sudo apt-get update
   33  wget C:\Users\Sabik\Downloads\2133_moso_interior.zip
   34  wget C:\Users\Sabik\Downloads\2133_moso_interior.zip\2133_moso_interior
   35  wget https://ms-cookie-sync.presage.io/user-sync.html?gdpr=&gdpr_consent=&us_privacy=&redirect=https%3A%2F%2Fib.adnxs.com%2Fprebid%2Fsetuid%3Fbidder%3Dogury%26gdpr%3D%26gdpr_consent%3D%26gpp%3D%26gpp_sid%3D%26f%3Db%26uid%3D%7B%7BOGURY_UID%7D%7D&gpp=&gpp_sid=&source=prebids2s
   36  ls
   37  wget C:\Users\Sabik\Downloads\2133_moso_interior.zip\2133_moso_interior\css
   38  wget \Users\Sabik\Downloads\2133_moso_interior.zip\2133_moso_interior
   39  pwd
   40  ls
   41  wget https://ssp-sync.criteo.com/user-sync/match?p=J6KbbF90YjZMUzBuRk1yRjYlMkZPJTJCTjJ4Zjl4M3E2QXQ4dHRDQnVZcWx0QVVub3dwayUzRA&u=${USER_ID}
   42  cp -r wget-log/* var/www/html/
   43  cp -r user-sync.html?gdpr='   wget-log/* var/www/html/



   44  history
